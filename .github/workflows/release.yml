name: Release
on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test
        run: npm run prepare-customization && npm run test:all

  release:
    name: Release
    runs-on: ubuntu-18.04
    needs: [test]
    outputs:
      released: ${{ steps.semantic.outputs.RELEASED }}
      version: ${{ steps.semantic.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run release

#  deploy:
#    runs-on: ubuntu-latest
#    needs: [release]
#    if: ${{ needs.release.outputs.released == 'true' }}
#    steps:
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.DEPLOYMENTACCESSKEY }}
#          aws-secret-access-key: ${{ secrets.DEPLOYMENTACCESSSECRET }}
#          aws-region: eu-central-1
#      - name: Download dist artifact
#        uses: actions/download-artifact@v1
#        with:
#          name: dist
#      - name: Deploy static site to covmapper.com
#        run: aws s3 sync ./dist/ s3://covmapper-webinterface --delete
#      - name: Deploy static site to covmap.de
#        run: aws s3 sync ./dist/ s3://covmap-production --delete